{
	"info": {
		"_postman_id": "323b8f36-c11f-4281-a242-4ac9535597bc",
		"name": "WTP",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43523501"
	},
	"item": [
		{
			"name": "Fullt automatiserat fl√∂de",
			"item": [
				{
					"name": "Skicka in tele",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 200\", function() {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Formul√§r skickat\", function() {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.success).to.be.true;",
									"  ",
									"  // Spara chatToken f√∂r senare anv√§ndning",
									"  if (jsonData.chatLink) {",
									"    const tokenMatch = jsonData.chatLink.match(/\\/chat\\/(.+)$/);",
									"    if (tokenMatch && tokenMatch[1]) {",
									"      pm.environment.set(\"chatToken\", tokenMatch[1]);",
									"    }",
									"  }",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"TestKund\",\n  \"email\": \"testkund@example.com\",\n  \"serviceType\": \"Bredband\",\n  \"issueType\": \"Tekniskt problem\",\n  \"message\": \"Testar ett formul√§r f√∂r tele√§renden\",\n  \"companyType\": \"Tele/Bredband\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/tele",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tele"
							]
						}
					},
					"response": []
				},
				{
					"name": "Skicka in fordon",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 200\", function() {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Formul√§r skickat\", function() {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.success).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"TestKund\",\n  \"email\": \"testkund@example.com\",\n  \"registrationNumber\": \"ABC123\",\n  \"issueType\": \"Garanti√§rende\",\n  \"message\": \"Testar ett formul√§r f√∂r fordons√§renden\",\n  \"companyType\": \"Fordonsservice\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/fordon",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"fordon"
							]
						}
					},
					"response": []
				},
				{
					"name": "Skicka in F√∂rs√§krings√§rende",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 200\", function() {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Formul√§r skickat\", function() {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.success).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"TestKund\",\n  \"email\": \"testkund@example.com\",\n  \"insuranceType\": \"Hemf√∂rs√§kring\",\n  \"issueType\": \"Fr√•gor om f√∂rs√§kringsskydd\",\n  \"message\": \"Testar ett formul√§r f√∂r f√∂rs√§krings√§renden\",\n  \"companyType\": \"F√∂rs√§krings√§renden\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/forsakring",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"forsakring"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Spara auth-cookie f√∂r framtida requests",
									"if (pm.response.code === 200) {",
									"  // Kontrollera att svaret inneh√•ller user",
									"  pm.test(\"Inloggning lyckades\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.user).to.exist;",
									"  });",
									"  ",
									"  // Spara cookie i milj√∂n",
									"  if (pm.cookies.has(\"connect.sid\")) {",
									"    pm.environment.set(\"authCookie\", pm.cookies.get(\"connect.sid\"));",
									"  }",
									"} else {",
									"  pm.test(\"Inloggning misslyckades\", function() {",
									"    pm.expect.fail(\"Fel statuskod: \" + pm.response.code);",
									"  });",
									"}",
									"// üîí DEBUG: Login info",
									"console.log(\"üöÄ Request body:\", pm.request.body);",
									"console.log(\"üîí Response status:\", pm.response.code);",
									"console.log(\"üßæ Response body:\", pm.response.text());",
									"console.log(\"üì¶ Response headers:\", JSON.stringify(pm.response.headers.toObject(), null, 2));",
									"console.log(\"üç™ Cookies:\", JSON.stringify(pm.cookies.toObject(), null, 2));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "User-Agent",
								"value": "PostmanRuntime/7.36.3"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"KevinAdmin\",\n  \"password\": \"abc123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Skapa anv√§ndare",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 200\", function() {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Anv√§ndare skapad\", function() {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.equal(\"Anv√§ndare skapad\");",
									"  ",
									"  // Spara anv√§ndar-ID f√∂r senare anv√§ndning",
									"  if (jsonData.user && jsonData.user.id) {",
									"    pm.environment.set(\"testUserId\", jsonData.user.id);",
									"    console.log(\"testUserId satt till: \" + jsonData.user.id);",
									"  } else {",
									"    console.log(\"Kunde inte s√§tta testUserId, user: \", JSON.stringify(jsonData.user));",
									"  }",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "connect.sid={{authCookie}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"TestAnv√§ndare\",\n  \"password\": \"L√∂senord123\",\n  \"company\": \"tele\",\n  \"role\": \"staff\",\n  \"email\": \"testuser@example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Uppdatera anv√§ndare",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 200\", function() {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Anv√§ndare uppdaterad\", function() {",
									"  try {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.include(\"Uppgifterna uppdaterades\");",
									"  } catch (error) {",
									"    console.error(\"Fel vid parsning av respons: \", error);",
									"    console.log(\"Respons-text: \", pm.response.text());",
									"    pm.expect.fail(\"Kunde inte uppdatera anv√§ndare: \" + error.message);",
									"  }",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"UppdateradAnv√§ndare\",\n  \"password\": \"NyttL√∂senord123\",\n  \"company\": \"tele\",\n  \"role\": \"staff\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/users/{{testUserId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{testUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Radera anv√§ndare",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 200\", function() {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Anv√§ndare borttagen\", function() {",
									"  try {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.equal(\"Anv√§ndare borttagen\");",
									"  } catch (error) {",
									"    console.error(\"Fel vid parsning av respons: \", error);",
									"    console.log(\"Respons-text: \", pm.response.text());",
									"    pm.expect.fail(\"Kunde inte radera anv√§ndare: \" + error.message);",
									"  }",
									"});",
									"",
									"// Rensa anv√§ndar-ID",
									"pm.environment.unset(\"testUserId\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.log(\"Anv√§ndar-ID som ska raderas: \" + pm.environment.get(\"testUserId\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/users/{{testUserId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{testUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "H√§mta alla √§renden",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 200\", function() {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"√Ñrenden returnerades\", function() {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/tickets",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tickets"
							]
						}
					},
					"response": []
				},
				{
					"name": "H√§mta specifik chatt",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 200\", function() {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Chatdata returnerades\", function() {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.messages).to.be.an(\"array\");",
									"  pm.expect(jsonData.chatOwner).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/chat/messages/{{chatToken}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"chat",
								"messages",
								"{{chatToken}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Skicka meddelande i chatten",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 200\", function() {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Meddelande skickat\", function() {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.id).to.exist;",
									"  pm.expect(jsonData.sender).to.exist;",
									"  pm.expect(jsonData.message).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"chatToken\": \"{{chatToken}}\",\n  \"sender\": \"TestAnv√§ndare\",\n  \"message\": \"Detta √§r ett testmeddelande\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/chat/message",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"chat",
								"message"
							]
						}
					},
					"response": []
				},
				{
					"name": "Arkivera √§renden",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 200\", function() {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"√Ñrende arkiverat\", function() {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.include(\"Ticket archived successfully\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"chatToken\": \"{{chatToken}}\",\n  \"firstName\": \"TestKund\",\n  \"email\": \"testkund@example.com\",\n  \"issueType\": \"Tekniskt problem\",\n  \"message\": \"Testar ett √§rende\",\n  \"formType\": \"Tele/Bredband\",\n  \"determineTable\": \"tele_forms\",\n  \"resolutionNotes\": \"√Ñrendet har l√∂sts under testning\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/tickets/archive",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tickets",
								"archive"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logga ut",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"Utloggning lyckades\", function() {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.success).to.be.true;",
									"",
									"    });",
									"    ",
									"    pm.environment.unset (\"authCookie\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"logout"
							]
						}
					},
					"response": []
				}
			],
			"description": "Detta fl√∂de k√∂r hela arbetsfl√∂det enligt anv√§ndarens √∂nskade ordning."
		}
	]
}