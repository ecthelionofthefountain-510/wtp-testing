name: CI/CD Test

on:
  push:
    branches: ["main"]

jobs:
  api_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore backend dependencies
        run: dotnet restore ./WTP-main/server/server.csproj

      - name: Start backend server
        run: |
          nohup dotnet run --project ./WTP-main/server/server.csproj > output.log 2>&1 &

      - name: Wait for backend to start
        run: sleep 10

      - name: Install Newman
        run: npm install -g newman

      - name: Run API-Tests (Postman)
        run: newman run ./Postman/Wtp.postman_collection.json -e ./Postman/Wtp.postman_environment.json

  gui_tests:
    runs-on: ubuntu-latest
    needs: api_tests
    steps:
      - uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore GUI test dependencies
        run: dotnet restore ./E2ETesting-main/E2ETesting.csproj

      - name: Build GUI test project
        run: dotnet build ./E2ETesting-main/E2ETesting.csproj

      - name: Install Playwright browsers
        run: pwsh ./E2ETesting-main/bin/Debug/net8.0/playwright.ps1 install --with-deps

      - name: Run Playwright GUI Tests
        run: dotnet test ./E2ETesting-main/E2ETesting.csproj

  # deploy:
  #   name: Deploy to Server
  #   runs-on: ubuntu-latest
  #   needs: [api_tests, gui_tests]
  #   steps:
  #     - name: Deploy App
  #       uses: appleboy/ssh-action@v1.2.0
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME }}
  #         password: ${{ secrets.PASSWORD }}
  #         port: ${{ secrets.PORT }}
  #         script: |
  #           cd /srv/www/malmo/kevin/
  #           git pull